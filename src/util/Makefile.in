# CircleMUD Makefile.in - Makefile template used by 'configure'
# for the 'util' directory

# C compiler to use
CC = @CC@

# Any special flags you want to pass to the compiler
MYFLAGS = @MYFLAGS@ -DCIRCLE_UTIL

#flags for profiling (see hacker.doc for more information)
PROFILE =

##############################################################################
# Do Not Modify Anything Below This Line (unless you know what you're doing) #
##############################################################################

# binary destination directory
BINDIR = ../../bin
# location of Circle include files
INCDIR = ..

CFLAGS = @CFLAGS@ $(MYFLAGS) $(PROFILE) -I$(INCDIR)

default: all

all: $(BINDIR)/asciipasswd \
    $(BINDIR)/autowiz \
    $(BINDIR)/plrtoascii \
    $(BINDIR)/rebuildIndex \
    $(BINDIR)/rebuildMailIndex \
    $(BINDIR)/shopconv \
    $(BINDIR)/sign \
    $(BINDIR)/split \
    $(BINDIR)/wld2html

asciipasswd: $(BINDIR)/asciipasswd

autowiz: $(BINDIR)/autowiz

plrtoascii: $(BINDIR)/plrtoascii

rebuildIndex: $(BINDIR)/rebuildIndex

rebuildMailIndex: $(BINDIR)/rebuildMailIndex

shopconv: $(BINDIR)/shopconv

sign: $(BINDIR)/sign

split: $(BINDIR)/split

wld2html: $(BINDIR)/wld2html

webster: $(BINDIR)/webster

$(BINDIR)/asciipasswd: asciipasswd.cpp
    $(CC) $(CFLAGS) -o $(BINDIR)/asciipasswd asciipasswd.cpp @CRYPTLIB@

$(BINDIR)/autowiz: autowiz.cpp
    $(CC) $(CFLAGS) -o $(BINDIR)/autowiz autowiz.cpp

$(BINDIR)/plrtoascii: plrtoascii.cpp
    $(CC) $(CFLAGS) -o $(BINDIR)/plrtoascii plrtoascii.cpp

$(BINDIR)/rebuildIndex: rebuildAsciiIndex.cpp
	$(CC) $(CFLAGS) -o $(BINDIR)/rebuildIndex rebuildAsciiIndex.cpp

$(BINDIR)/rebuildMailIndex: rebuildMailIndex.cpp
	$(CC) $(CFLAGS) -o $(BINDIR)/rebuildMailIndex rebuildMailIndex.cpp

$(BINDIR)/shopconv: shopconv.cpp
    $(CC) $(CFLAGS) -o $(BINDIR)/shopconv shopconv.cpp

$(BINDIR)/sign: sign.cpp
    $(CC) $(CFLAGS) -o $(BINDIR)/sign sign.cpp @NETLIB@

$(BINDIR)/split: split.cpp
    $(CC) $(CFLAGS) -o $(BINDIR)/split split.cpp

$(BINDIR)/wld2html: wld2html.cpp
    $(CC) $(CFLAGS) -o $(BINDIR)/wld2html wld2html.cpp

$(BINDIR)/webster: webster.cpp
    $(CC) $(CFLAGS) -o $(BINDIR)/webster webster.cpp

# Dependencies for the object files (automagically generated with
# gcc -MM)

depend:
    $(CC) -I$(INCDIR) -MM *.cpp > depend

-include depend
